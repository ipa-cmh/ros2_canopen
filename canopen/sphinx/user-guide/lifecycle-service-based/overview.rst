Lifecycled Service Interface
==================================

Lifecycle Device Container
"""""""""""""""""""""""""""
The Lifecycle Device Container implements ROS2 component manager. The load and unload services are disabled.
Devices are loaded based on the Bus Configuration File (bus.yml). It provides the list service though.

On launch the Lifecycle Device Container will load the Master and Drivers specified in the
Bus Configuration file.


Lifecycle Device Manager
""""""""""""""""""""""""
The Lifecycle Device Manager implements the Lifecycle Node Interface. The Lifecycle Device Manager
simplifies bringing master and drivers to Active state, when Lifecycle Device Manager is brought to
Active state, Master and device drivers are as well brought to active state. In Configuring state, Master
and Driver are kept in unconfigured state. Connection to the device is only established during activation.

Bus Configuration
"""""""""""""""""
The bus configuration for the needs to use the driver classes that are marked as
lifecycle drivers.

.. csv-table:: Available Driver Components
   :header: "Package", "Component"

    canopen_core, ros2_canopen::LifecycleMasterNode
    canopen_proxy_driver, ros2_canopen::LifecycleProxyDriver
    canopen_402_driver, ros2_canopen::LifecycleMotionControllerDriver

Launching
"""""""""""""
The device manager has the following configuration parameters.

.. csv-table:: Parameters
   :header: "Parameter", "Type", "Description"

    bus_conf, string, (Mandatory) Path to the bus configuration YAML-file
    master_dcf, string, (Mandatory) Path to the DCF file to be used by the master node. Usually generated by dcfgen as master.dcf.
    master_bin, string, (Optional) Path to the concise DCF (.bin) file to be used to configure the master. Usually generated by dcfgen as master.bin. (default: "")
    can_interface, string, (Mandatory) Name of the CAN interface to be used. (default: vcan0)

